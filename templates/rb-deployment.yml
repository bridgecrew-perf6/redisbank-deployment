{{- if not .Values.redis.banking.app.deployment.useDC }}
kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
{{ toYaml .Values.redis.banking.app.annotations | indent 4 }}
  name: {{ .Values.redis.banking.app.name }}
  namespace: redis-apps
  labels:
{{ toYaml .Values.redis.banking.app.labels | indent 4 }}
spec:
  replicas: {{ default 1 .Values.redis.banking.app.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.redis.banking.app.labels.app }}
      group: {{ .Values.redis.banking.app.labels.group }}
  template:
    metadata:
      labels:
{{ toYaml .Values.redis.banking.app.labels | indent 8 }}
      annotations:
{{ toYaml .Values.redis.banking.app.annotations | indent 8 }}
    spec:
      containers:
        - resources: {}
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: redis-apps-redisbank
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.banking.app.name }}-db-auth
                  key: password
            - name: REDIS_BANK_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.redis.banking.app.name }}-auth
                    key: username
            - name: REDIS_BANK_PWD
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.redis.banking.app.name }}-auth
                    key: password
            - name: REDIS_BANK_ROLES
                valueFrom:
                  secretKeyRef:
                    name: {{ .Values.redis.banking.app.name }}-auth
                    key: roles
          securityContext:
            privileged: false
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          terminationMessagePolicy: File
          envFrom:
            - configMapRef:
                name: {{ .Values.redis.banking.app.name }}-config
          image: >-
            image-registry.openshift-image-registry.svc:5000/devops/redisbank:latest
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
{{- end }}